name: Build Docs PDFs

on:
  workflow_dispatch:
  push:
    paths:
      - 'docs/**/*.md'
      - '.github/workflows/docs-pdf.yml'
      - 'Makefile'
  pull_request:
    paths:
      - 'docs/**/*.md'
      - '.github/workflows/docs-pdf.yml'
      - 'Makefile'

jobs:
  build-pdfs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install pandoc and tectonic
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc
          curl --proto '=https' --tlsv1.2 -sSf https://tectonic-installer.github.io/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Generate PDFs
        run: |
          make pdfs || { echo 'Make pdfs failed'; exit 1; }

      - name: Upload PDFs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-pdfs
          path: docs/**/*.pdf
          retention-days: 30

      - name: Commit PDFs back (on push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          if git diff --quiet -- docs/**/*.pdf; then
            echo 'No PDF changes to commit.'
          else
            git add docs/**/*.pdf
            git commit -m 'chore(docs): update generated PDFs [skip ci]'
            git push
          fi

      - name: Comment on PR with PDF updates
        if: github.event_name == 'pull_request' && !contains(github.actor, 'bot')
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Find PDF files
            const pdfFiles = [];
            function findPDFs(dir) {
              const files = fs.readdirSync(dir);
              for (const file of files) {
                const fullPath = path.join(dir, file);
                if (fs.statSync(fullPath).isDirectory()) {
                  findPDFs(fullPath);
                } else if (file.endsWith('.pdf')) {
                  pdfFiles.push(fullPath.replace(/^\.\//, ''));
                }
              }
            }
            findPDFs('./docs');
            
            if (pdfFiles.length > 0) {
              const comment = `## ðŸ“„ Documentation PDFs Updated
              
              The following PDF files have been generated/updated:
              ${pdfFiles.map(f => `- \`${f}\``).join('\n')}
              
              PDFs are available as build artifacts and will be committed when this PR is merged.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
